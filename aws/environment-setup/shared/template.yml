AWSTemplateFormatVersion: "2010-09-09"

Resources: 

  DevApiUser:
    Type: AWS::IAM::User
    Properties:
      UserName: DevApiUser
      Groups:
        - !Ref DevApiGroup

  DevApiGroup: 
    Type: "AWS::IAM::Group"
    Properties: 
      ManagedPolicyArns: 
        - !Ref DevApiLimitedPolicy
        - !Ref DevApiIamPolicy

  DevApiServiceRole: 
    # to be used by real users, not bots (e.g. github actions)
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - !Ref DevApiLimitedPolicy
        - !Ref DevApiIamPolicy

  DevApiIamPolicy: 
    Type: "AWS::IAM::ManagedPolicy"
    Properties: 
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
            Effect: "Allow"
            Action: 
              - "iam:*"
            Resource: "*"

  DevApiLimitedPolicy: 
    Type: "AWS::IAM::ManagedPolicy"
    Properties: 
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Action: 
              - "apigateway:*"
              - "athena:*"
              - "cloudformation:*"
              - "cloudwatch:*"
              - "dax:*"
              - "dynamodb:*"
              - "events:*"
              - "kinesis:*"
              - "kms:*"
              - "lambda:*"
              - "logs:*"
              - "s3:*"
              - "ses:*"
              - "sns:*"
              - "sqs:*"
              - "ssm:*"
            Resource: "*"
            Condition: 
              StringEquals: 
                "aws:RequestedRegion":
                  - eu-west-1
                  - eu-west-2
          - 
            Effect: "Allow"
            # the following four services are special cases which use a single 'global' (i.e. us-based) endpoint
            Action: 
              - "cloudfront:*"
              - "route53:*"
              - "support:*"
              # only iam read access here
              - "iam:GetGroup"
              - "iam:GetGroupPolicy"
              - "iam:GetPolicy"
              - "iam:GetPolicyVersion"
              - "iam:GetRole"
              - "iam:GetRolePolicy"
              - "iam:GetUser"
              - "iam:GetUserPolicy"
              - "iam:ListAttachedGroupPolicies"
              - "iam:ListAttachedRolePolicies"
              - "iam:ListAttachedUserPolicies"
              - "iam:ListEntitiesForPolicy"
              - "iam:ListGroupPolicies"
              - "iam:ListGroups"
              - "iam:ListGroupsForUser"
              - "iam:ListPolicies"
              - "iam:ListPoliciesGrantingServiceAccess"
              - "iam:ListPolicyVersions"
              - "iam:ListRolePolicies"
              - "iam:ListRoleTags"
              - "iam:ListRoles"
              - "iam:ListUserPolicies"
              - "iam:ListUserTags"
              - "iam:ListUsers"
            Resource: "*"

  CloudFormationServiceRole: 
    # it's important that this policy does not have write permissions to IAM
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - !Ref DevApiLimitedPolicy

  CloudFormationInvokerUser:
    Type: AWS::IAM::User
    Properties:
      UserName: CloudFormationInvokerUser
      Groups:
        - !Ref CloudFormationInvokerGroup

  CloudFormationInvokerGroup: 
    Type: "AWS::IAM::Group"
    Properties: 
      ManagedPolicyArns: 
        - !Ref CloudFormationInvokerPolicy

  CloudFormationInvokerPolicy: 
    Type: "AWS::IAM::ManagedPolicy"
    Properties: 
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            # can push artifacts to S3 (that could be referenced in the cloudformation stack)
            Effect: "Allow"
            Action: 
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:PutObjectTagging"
              - "s3:GetObjectVersion"
              - "s3:ListMultipartUploadParts"
              - "s3:AbortMultipartUpload"
            Resource: !Sub
              - "${Bucket}/*"
              - { Bucket: !GetAtt CfStagingBucket.Arn }
            Condition: 
              StringEquals: 
                "aws:RequestedRegion":
                  - eu-west-1
                  - eu-west-2
          - 
            # can pass the service role to cloudformation
            Effect: "Allow"
            Action: 
              - "iam:PassRole"
            Resource: !GetAtt CloudFormationServiceRole.Arn
            Condition: 
              StringEquals: 
                "aws:RequestedRegion":
                  - eu-west-1
                  - eu-west-2
          - 
            # can invoke cloudformation itself - WRITE actions
            Effect: "Allow"
            Action: 
              - "cloudformation:ContinueUpdateRollback"
              - "cloudformation:CreateChangeSet"
              - "cloudformation:CreateStack"
              - "cloudformation:CreateStackSet"
              - "cloudformation:UpdateStack"
              - "cloudformation:UpdateStackSet"
            Resource: "*"
            Condition: 
              StringEquals: 
                "aws:RequestedRegion":
                  - eu-west-1
                  - eu-west-2
                "cloudformation:RoleArn":
                  # prevent the user using any other role for running cloudformation - IAM permissions are denied elsewhere to prevent changing this policy
                  - !GetAtt CloudFormationServiceRole.Arn 
          - 
            # can invoke cloudformation itself - READ(ish) actions
            Effect: "Allow"
            Action: 
              - "cloudformation:CancelUpdateStack"
              - "cloudformation:CreateStackInstances"
              - "cloudformation:DeregisterType"
              - "cloudformation:DescribeAccountLimits"
              - "cloudformation:DescribeChangeSet"
              - "cloudformation:DescribeStackDriftDetectionStatus"
              - "cloudformation:DescribeStackEvents"
              - "cloudformation:DescribeStackInstance"
              - "cloudformation:DescribeStackResource"
              - "cloudformation:DescribeStackResourceDrifts"
              - "cloudformation:DescribeStackResources"
              - "cloudformation:DescribeStackSet"
              - "cloudformation:DescribeStackSetOperation"
              - "cloudformation:DescribeStacks"
              - "cloudformation:DescribeType"
              - "cloudformation:DescribeTypeRegistration"
              - "cloudformation:DetectStackDrift"
              - "cloudformation:DetectStackResourceDrift"
              - "cloudformation:DetectStackSetDrift"
              - "cloudformation:EstimateTemplateCost"
              - "cloudformation:ExecuteChangeSet"
              - "cloudformation:GetStackPolicy"
              - "cloudformation:GetTemplate"
              - "cloudformation:GetTemplateSummary"
              - "cloudformation:ListChangeSets"
              - "cloudformation:ListExports"
              - "cloudformation:ListImports"
              - "cloudformation:ListStackInstances"
              - "cloudformation:ListStackResources"
              - "cloudformation:ListStackSetOperationResults"
              - "cloudformation:ListStackSetOperations"
              - "cloudformation:ListStackSets"
              - "cloudformation:ListStacks"
              - "cloudformation:ListTypeRegistrations"
              - "cloudformation:ListTypeVersions"
              - "cloudformation:ListTypes"
              - "cloudformation:RegisterType"
              - "cloudformation:SetTypeDefaultVersion"
              - "cloudformation:SignalResource"
              - "cloudformation:StopStackSetOperation"
              - "cloudformation:TagResource"
              - "cloudformation:UntagResource"
              - "cloudformation:UpdateStackInstances"
              - "cloudformation:UpdateTerminationProtection"
              - "cloudformation:ValidateTemplate"
            Resource: "*"
            Condition: 
              StringEquals: 
                "aws:RequestedRegion":
                  - eu-west-1
                  - eu-west-2
          - 
            #... except for some things you probably won't want to do through the api (and could be dangerous) or allow a remote user to do - note these shouldn't be declared above but are explicitly denied for safety
            Effect: "Deny"
            Action: 
              - "cloudformation:DeleteChangeSet"
              - "cloudformation:DeleteStack"
              - "cloudformation:DeleteStackInstances"
              - "cloudformation:DeleteStackSet"
              - "cloudformation:SetStackPolicy"
            Resource: "*"

  CfStagingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "cloudformation-code-deploy-staging-${AWS::AccountId}"
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration: 
        Status: Enabled
      LifecycleConfiguration: 
        Rules: 
          - Id: CleanUp
            AbortIncompleteMultipartUpload: 
              DaysAfterInitiation: 2
            NoncurrentVersionExpirationInDays: 1
            Status: Enabled
            #also "Clean up expired object delete markers" not in cf yet - https://github.com/aws-cloudformation/aws-cloudformation-coverage-roadmap/issues/132

Outputs:
  GoHere1: 
    Value: !Sub "Now create api tokens for ${DevApiUser}: https://console.aws.amazon.com/iam/home#/users/${DevApiUser}?section=security_credentials"
  GoHere2: 
    Value: !Sub "Now create api tokens for ${CloudFormationInvokerUser}: https://console.aws.amazon.com/iam/home#/users/${CloudFormationInvokerUser}?section=security_credentials"
  CfServiceRole: 
    Value: !GetAtt CloudFormationServiceRole.Arn
  DevApiServiceRole: 
    Value: !GetAtt DevApiServiceRole.Arn
